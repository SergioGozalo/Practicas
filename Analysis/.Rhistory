#ETH
representative <- as.data.frame(distinct(eth[13]))
representative <- representative %>%
separate(Representative.MAG, c("Rep", NA), ".fa")
representative <- as.list(as.data.frame(t(representative)))
eth <- subset(eth, MAG.Id %in% representative, .keep_all = TRUE)
eth <- eth %>%
select(1,4,5,10, 16)
colnames(eth) <- c("ID", "Completeness", "Contamination", "Taxonomy", "N50")
eth <- eth %>%
mutate(Completeness = as.numeric(gsub(",",".",Completeness,fixed=TRUE)),
Contamination = as.numeric(gsub(",",".",Contamination,fixed=TRUE)),
N50 = as.numeric(gsub(",",".",N50,fixed=TRUE)))
#ICM
icm <- icm %>%
select(1,4,14,15,22)
colnames(icm) <- c("ID", "Taxonomy", "Completeness", "Contamination", "N50")
icm <- icm[-1,]
#ETH
ethmeanct <-  sum(as.numeric(eth$Completeness))/nrow(eth)
ethplotct <- ggplot(eth, aes(y = Completeness, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = ethmeanct, col = "red") + ggtitle("ETH Completeness")
ethplotct
#ICM
icmmeanct <- sum(icm$Completeness)/nrow(icm)
icmplotct <- ggplot(icm, aes(y = Completeness, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeanct, col = "red") + ggtitle("ICM Completeness")
icmplotct
#ETH
ethmeanco <-  sum(as.numeric(eth$Contamination))/nrow(eth)
ethplotco <- ggplot(eth, aes(y = Contamination, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = ethmeanco, col = "red") + ggtitle("ETH Contamination")
ethplotco
#ICM
icmmeanco <- sum(icm$Contamination)/nrow(icm)
icmplotco <- ggplot(icm, aes(y = Contamination, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeanco, col = "red") + ggtitle("ICM Contamination")
icmplotco
#ETH
ethmeann <-  sum(as.numeric(eth$N50))/nrow(eth)
ethplotn <- ggplot(eth, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = ethmeann, col = "red") + ggtitle("ETH N50")
ethplotn
#ICM
icmmeann <- sum(icm$N50)/nrow(icm)
icmplotn <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50")
icmplotn
icmplotres <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50 (no outliers)") + ylim(0, 100000)
icmplotres
icmmeanct
ethmeanct
ethmeanct
icmmeanct
#ETH
ethmeanct <-  sum(as.numeric(eth$Completeness))/nrow(eth)
ethplotct <- ggplot(eth, aes(y = Completeness, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = ethmeanct, col = "red") + ggtitle("ETH Completeness")
ethplotct
#ICM
icmmeanct <- sum(icm$Completeness)/nrow(icm)
icmplotct <- ggplot(icm, aes(y = Completeness, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeanct, col = "red") + ggtitle("ICM Completeness")
icmplotct
ethmeann
icmmeann
#ETH
ethmeann <-  sum(as.numeric(eth$N50))/nrow(eth)
ethplotn <- ggplot(eth, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = ethmeann, col = "red") + ggtitle("ETH N50")
ethplotn
#ICM
icmmeann <- sum(icm$N50)/nrow(icm)
icmplotn <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50")
icmplotn
icmplotres <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50 (no outliers)") + ylim(0, 100000)
icmplotres
icm
icmplotres <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50 (no outliers)") + ylim(0, 100000) + facet_wrap(Taxonomy)
icmplotres <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50 (no outliers)") + ylim(0, 100000) + facet_wrap(icm$Taxonomy)
icmplotres
#ETH
ethmeann <-  sum(as.numeric(eth$N50))/nrow(eth)
ethplotn <- ggplot(eth, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = ethmeann, col = "red") + ggtitle("ETH N50")
ethplotn
#ICM
icmmeann <- sum(icm$N50)/nrow(icm)
icmplotn <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50")
icmplotn
icmplotres <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50 (no outliers)") + ylim(0, 100000)
icmplotres
(sum(icm$N50)-25000)/nrow(icm)
icmmeann
(sum(icm$N50)-250000)/nrow(icm)
#ETH
ethmeann <-  sum(as.numeric(eth$N50))/nrow(eth)
ethplotn <- ggplot(eth, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = ethmeann, col = "red") + ggtitle("ETH N50")
ethplotn
#ICM
icmmeann <- sum(icm$N50)/nrow(icm)
icmplotn <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50")
icmplotn
icmplotres <- ggplot(icm, aes(y = N50, x = ID)) + geom_col() + theme(axis.text.x = element_blank()) + geom_hline(yintercept = icmmeann, col = "red") + ggtitle("ICM N50 (no outliers)") + ylim(0, 100000)
icmplotres
knit_with_parameters('C:/Users/Usuario/Desktop/Bioinformatica/Practicas/Practicas/Analysis/MAGs_comparisson.Rmd')
unlink('MAGs_comparisson_cache', recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = setwd("/Users/Usuario/Desktop/Bioinformatica/Practicas/Practicas/Analysis/"))
eth <- read.csv("MAGs/ETH/MAGs_EMOSE_summary.fixed.csv", header = TRUE, sep = ";")
icm <- read.csv("MAGs/ICM/Mags_ICM_75.csv", header = TRUE, sep = ";")
eth
library("tidyr")
library("dplyr")
library("ggplot2")
#ETH
representative <- as.data.frame(distinct(eth[13]))
representative <- representative %>%
separate(Representative.MAG, c("Rep", NA), ".fa")
representative <- as.list(as.data.frame(t(representative)))
eth <- subset(eth, MAG.Id %in% representative, .keep_all = TRUE)
eth <- eth %>%
select(1,4,5,10, 16)
colnames(eth) <- c("ID", "Completeness", "Contamination", "Taxonomy", "N50")
eth <- eth %>%
mutate(Completeness = as.numeric(gsub(",",".",Completeness,fixed=TRUE)),
Contamination = as.numeric(gsub(",",".",Contamination,fixed=TRUE)),
N50 = as.numeric(gsub(",",".",N50,fixed=TRUE)))
#ICM
icm <- icm %>%
select(1,4,14,15,22)
colnames(icm) <- c("ID", "Taxonomy", "Completeness", "Contamination", "N50")
icm <- icm[-1,]
eth
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = setwd("/Users/Usuario/Desktop/Bioinformatica/Practicas/Practicas/Analysis/"))
library("vegan")
library("ggplot2")
library("tidyr")
library("dplyr")
ebi_go_abundances <- read.table("functional.tables/ERP112966_GO_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go_abundances$description <- NULL #Need to remove this column to work
ebi_go_abundances$category <- NULL #Need to remove this column to work
ebi_go_abundances <- t(ebi_go_abundances)
ebi_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go.slim_abundances$description <- NULL
ebi_go.slim_abundances$category <- NULL
ebi_go.slim_abundances <- t(ebi_go.slim_abundances)
ebi_ipr_abundances <- read.table("functional.tables/ERP112966_IPR_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_ipr_abundances$description <- NULL
ebi_ipr_abundances$category <- NULL
ebi_ipr_abundances <- t(ebi_ipr_abundances)
# Subsampling
n1 <- min(rowSums(ebi_go_abundances))
ebi_go_abundances_ss <- rrarefy(ebi_go_abundances, n1)
n2 <- min(rowSums(ebi_go.slim_abundances))
ebi_go.slim_abundances_ss <- rrarefy(ebi_go.slim_abundances, n2)
n3 <- min(rowSums(ebi_ipr_abundances))
ebi_ipr_abundances_ss <- rrarefy(ebi_ipr_abundances, n3)
# Richness
ebi_go_abundances_richness <- estimateR(ebi_go_abundances_ss)
ebi_go.slim_abundances_richness <- estimateR(ebi_go.slim_abundances_ss)
ebi_ipr_abundances_richness <- estimateR(ebi_ipr_abundances_ss)
ebi_go_abundances_ss_bray <- vegdist(ebi_go_abundances_ss, method="bray")
ebi_go_abundances_ss_bray.nmds <- monoMDS(ebi_go_abundances_ss_bray)
plot(ebi_go_abundances_ss_bray.nmds, main = "GO")
stressplot(ebi_go_abundances_ss_bray.nmds, main = "GO")
ebi_go.slim_abundances_ss_bray <- vegdist(ebi_go.slim_abundances_ss, method="bray")
ebi_go.slim_abundances_ss_bray.nmds <- monoMDS(ebi_go.slim_abundances_ss_bray)
plot(ebi_go.slim_abundances_ss_bray.nmds, main = "GO-SLIM")
stressplot(ebi_go.slim_abundances_ss_bray.nmds, main = "GO-SLIM")
ebi_ipr_abundances_ss_bray <- vegdist(ebi_ipr_abundances_ss, method="bray")
ebi_ipr_abundances_ss_bray.nmds <- monoMDS(ebi_ipr_abundances_ss_bray)
plot(ebi_ipr_abundances_ss_bray.nmds, main = "IPR")
stressplot(ebi_ipr_abundances_ss_bray.nmds, main = "IPR")
ebi_go_abundances_ss_bray_hclust <- hclust(ebi_go_abundances_ss_bray, method="average")
plot(ebi_go_abundances_ss_bray_hclust, main = "GO")
ebi_go.slim_abundances_ss_bray_hclust <- hclust(ebi_go.slim_abundances_ss_bray, method="average")
plot(ebi_go.slim_abundances_ss_bray_hclust, main = "GO-SLIM")
ebi_ipr_abundances_ss_bray_hclust <- hclust(ebi_ipr_abundances_ss_bray, method="average")
plot(ebi_ipr_abundances_ss_bray_hclust, main = "IPR")
icm_cog_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_cog_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_kegg_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_kegg_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_pfam_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_pfam.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_pfam_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_pfam.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_cog_meta_bray <- vegdist(icm_cog_meta, method="bray")
icm_cog_scg_bray <- vegdist(icm_cog_scg, method="bray")
icm_cog_meta_bray.nmds <- monoMDS(icm_cog_meta_bray)
icm_cog_scg_bray.nmds <- monoMDS(icm_cog_scg_bray)
# MetaGS
plot(icm_cog_meta_bray.nmds, main = "COG MetaGS")
# SC
plot(icm_cog_scg_bray.nmds, main = "COG SCG")
stressplot(icm_cog_meta_bray.nmds, main = "COG MetaGS")
stressplot(icm_cog_scg_bray.nmds, main = "COG SCG")
icm_kegg_meta_bray <-vegdist(icm_kegg_meta, method="bray")
icm_kegg_scg_bray <-vegdist(icm_kegg_scg, method="bray")
icm_kegg_meta_bray.nmds <- monoMDS(icm_kegg_meta_bray)
icm_kegg_scg_bray.nmds <- monoMDS(icm_kegg_scg_bray)
# MetaGS
plot(icm_kegg_meta_bray.nmds, main = "KEGG MetaGS")
# SC
plot(icm_kegg_scg_bray.nmds, main = "KEGG SCG")
stressplot(icm_kegg_meta_bray.nmds, main = "KEGG MetaGS")
stressplot(icm_kegg_scg_bray.nmds, main = "KEGG SCG")
icm_pfam_meta_bray <-vegdist(icm_pfam_meta, method="bray")
icm_pfam_scg_bray <-vegdist(icm_pfam_scg, method="bray")
icm_pfam_meta_bray.nmds <- monoMDS(icm_pfam_meta_bray)
icm_pfam_scg_bray.nmds <- monoMDS(icm_pfam_scg_bray)
# MetaGS
plot(icm_pfam_meta_bray.nmds, main = "PFAM MetaGS")
# SC
plot(icm_pfam_scg_bray.nmds, main = "PFAM SCG")
stressplot(icm_pfam_meta_bray.nmds, main = "PFAM MetaGS")
stressplot(icm_pfam_scg_bray.nmds, main = "PFAM SCG")
icm_cog_meta_bray_hclust <- hclust(icm_cog_meta_bray, method="average")
plot(icm_cog_meta_bray_hclust, main = "COG MetaGS")
icm_cog_scg_bray_hclust <- hclust(icm_cog_scg_bray, method="average")
plot(icm_cog_scg_bray_hclust, main = "COG SCG")
icm_kegg_meta_bray_hclust <-hclust(icm_kegg_meta_bray, method="average")
plot(icm_kegg_meta_bray_hclust, main = "KEGG MetaGS")
icm_kegg_scg_bray_hclust <-hclust(icm_kegg_scg_bray, method="average")
plot(icm_kegg_scg_bray_hclust, main = "KEGG SCG")
icm_pfam_meta_bray_hclust <-hclust(icm_pfam_meta_bray, method="average")
plot(icm_pfam_meta_bray_hclust, main = "PFAM MetaGS")
icm_pfam_scg_bray_hclust <-hclust(icm_pfam_scg_bray, method="average")
plot(icm_pfam_scg_bray_hclust, main = "PFAM SCG")
otu_mitags <- (read.delim("functional.tables/otu_table97.txt", header = TRUE, sep = "\t"))
otu_mitags$OTUId <- NULL
otu_mitags <- t(otu_mitags)
otu_mitags_ss <- rrarefy(otu_mitags, min(rowSums(otu_mitags)))
richness <- estimateR(otu_mitags_ss)
richness
#otu_rare <- rarefaction(otu_mitags_ss)
#otu_rcurve <- rarecurve(otu_mitags_ss)
#otu_acc <- specaccum(otu_mitags_ss, method = "exact", permutations = 1000)
#plot(otu_acc)
plot(radfit(colSums(otu_mitags_ss)))
otu_preston<-prestonfit(colSums(otu_mitags_ss))
otu_prestondistr<-prestondistr(colSums(otu_mitags_ss))
plot(otu_preston)
lines(otu_prestondistr, line.col="blue3")
otu_mitags_ss_bray <- vegdist(otu_mitags_ss, method="bray")
otu_mitags_ss_bray.nmds <- monoMDS(otu_mitags_ss_bray)
otu_mitags_ss_bray.nmds
plot(otu_mitags_ss_bray.nmds, main = "MiTags")
stressplot(otu_mitags_ss_bray.nmds, main = "MiTags")
otu_mitags_ss_hclust <- hclust(otu_mitags_ss_bray, "average")
plot(otu_mitags_ss_hclust)
otu_mitags_ss_hclust
otu_dca <- decorana(otu_mitags_ss)
plot(otu_dca, display = "sites")
plot(otu_dca, display = "species")
otu_mitags_bray <- vegdist(otu_mitags, method="bray")
plot(otu_mitags_ss_bray,otu_mitags_bray)
abline(0,1, col = "red")
mantel(otu_mitags_ss_bray,otu_mitags_bray)
rarefaction<-function(x,subsample=1000, plot=TRUE, color=TRUE, error=FALSE, legend=TRUE, symbol){
library(vegan)
x <- as.matrix(x)
y1<-apply(x, 1, sum)
rare.data<-x
select<-unique(sort(c((apply(x, 1, sum)), (seq(0,(max(y1)), by=subsample)), recursive=TRUE)))
storesummary.e<-matrix(data=NA, ncol=length(rare.data[,1]),nrow=length(select))
rownames(storesummary.e)<-c(select)
colnames(storesummary.e)<-rownames(x)
storesummary.se<-matrix(data=NA, ncol=length(rare.data[,1]),nrow=length(select))
rownames(storesummary.se)<-c(select)
colnames(storesummary.se)<-rownames(x)
for(i in 1:length(select))                      #the for loop
{
select.c<-select[i]                     #assigns the 'i'th element of select to select.c
foo<-rarefy(x,select.c, se=T)           #use whatever vegan fn you want
storesummary.e[i,]<-foo[1,]
storesummary.se[i,]<-foo[2,]
}
storesummary.e<-as.data.frame(storesummary.e)
richness.error<<-storesummary.se
for (i in 1:(length(storesummary.e)))
{
storesummary.e[,i]<-ifelse(select>sum(x[i,]), NA, storesummary.e[,i])
}
###############plot result################################
if (plot==TRUE)
{
if(color==TRUE){
plot(select,storesummary.e[,1], xlab="Individuals in Subsample",
xlim=c(0,max(select)), ylim=c(0, 5+(max(storesummary.e[,1:(length(storesummary.e))], na.rm=TRUE))),
ylab="Mean Species Richness", pch =16, col=2, type="n")
for (j in 1:(length(storesummary.e))){
points(select, storesummary.e[,j], pch=16, col=j+1, type="b", lty=1)}
if(error==TRUE){
for (m in 1:(length(storesummary.e))){
segments(select, storesummary.e[,m]+storesummary.se[,m],select, storesummary.e[,m]-storesummary.se[,m])
}
}
if (legend==TRUE){
legend("bottomright", colnames(storesummary.e), inset=0.05, lty=1, col=1:length(storesummary.e)+1, lwd=2)
}
}
else
{
plot(select,storesummary.e[,1], xlab="Individuals in Subsample",
xlim=c(0,max(select)), ylim=c(0, 5+(max(storesummary.e[,1:(length(storesummary.e))], na.rm=TRUE))),
ylab="Mean Species Richness", pch =16, col=2, type="n")
for (j in 1:(length(storesummary.e))){
points(select, storesummary.e[,j], type="l", lty=1)}
for (k in 1:(length(storesummary.e))){
symbol<-ifelse(symbol<length(storesummary.e),rep(symbol,2),symbol)
points(as.numeric(rownames(subset(storesummary.e, storesummary.e[,k]==max(storesummary.e[,k],na.rm=TRUE)))), max(storesummary.e[,k],na.rm=TRUE), pch=symbol[k], cex=1.5)}
if(error==TRUE){
for (m in 1:(length(storesummary.e))){
points(select, storesummary.e[,m]+storesummary.se[,m], type="l", lty=2)
points(select, storesummary.e[,m]-storesummary.se[,m], type="l", lty=2)}}
k<-1:(length(storesummary.e))
if (legend==TRUE){
legend("bottomright", colnames(storesummary.e), pch=symbol[k], inset=0.05, cex=1.3)
}
}
}
print("rarefaction by J. Jacobs, last update April 17, 2009")
if(error==TRUE)(print("errors around lines are the se of the iterations, not true se of the means")  )
list("richness"= storesummary.e, "SE"=richness.error, "subsample"=select)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = setwd("/Users/Usuario/Desktop/Bioinformatica/Practicas/Practicas/Analysis/"))
icm_cog_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_cog_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_kegg_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_kegg_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_pfam_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_pfam.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_pfam_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_pfam.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
#COG
icm_cog_meta_bray <- vegdist(icm_cog_meta, method="bray")
icm_cog_scg_bray <- vegdist(icm_cog_scg, method="bray")
#KEGG
icm_kegg_meta_bray <-vegdist(icm_kegg_meta, method="bray")
icm_kegg_scg_bray <-vegdist(icm_kegg_scg, method="bray")
#PFAM
icm_pfam_meta_bray <-vegdist(icm_pfam_meta, method="bray")
icm_pfam_scg_bray <-vegdist(icm_pfam_scg, method="bray")
plot(icm_cog_meta_bray, icm_cog_scg_bray, main = "COG: metaGsize vs SCG")
abline(0,1)
plot(icm_cog_meta_bray, icm_cog_scg_bray, main = "COG: metaGsize vs SCG")
abline(0,1)
mantel(icm_cog_meta_bray, icm_cog_scg_bray)
plot(icm_kegg_meta_bray, icm_kegg_scg_bray, main = "KEGG: metaGsize vs SCG")
abline(0,1)
mantel(icm_kegg_meta_bray, icm_kegg_scg_bray)
plot(icm_pfam_meta_bray, icm_pfam_scg_bray, main = "PFAM: metaGsize vs SCG")
abline(0,1)
mantel(icm_pfam_meta_bray, icm_pfam_scg_bray)
plot(icm_cog_meta_bray, icm_cog_scg_bray, main = "COG: metaGsize vs SCG")
abline(0,1)
plot(icm_kegg_meta_bray, icm_kegg_scg_bray, main = "KEGG: metaGsize vs SCG")
abline(0,1)
plot(icm_pfam_meta_bray, icm_pfam_scg_bray, main = "PFAM: metaGsize vs SCG")
abline(0,1)
mantel(icm_cog_meta_bray, icm_cog_scg_bray)
mantel(icm_kegg_meta_bray, icm_kegg_scg_bray)
mantel(icm_pfam_meta_bray, icm_pfam_scg_bray)
plot(icm_cog_metaGsize_bray, icm_kegg_metaGsize_bray, main = "COG metaGsize vs KEGG metaGsize")
plot(icm_cog_meta_bray, icm_kegg_meta_bray, main = "COG metaGsize vs KEGG metaGsize")
abline(0,1)
mantel(icm_cog_meta_bray, icm_kegg_meta_bray)
plot(icm_cog_meta_bray, icm_pfam_meta_bray, main = "COG metaGsize vs PFAM metaGsize")
abline(0,1)
mantel(icm_cog_meta_bray, icm_pfam_metaGsize_bray)
#Plots
plot(icm_cog_meta_bray, icm_kegg_meta_bray, main = "COG-meta vs KEGG-meta")
abline(0,1)
plot(icm_cog_meta_bray, icm_pfam_meta_bray, main = "COG-meta vs PFAM-meta")
abline(0,1)
plot(icm_pfam_meta_bray, icm_kegg_meta_bray, main = "PFAM-meta vs KEGG-meta")
abline(0,1)
#Mantel test for correlation
mantel(icm_cog_meta_bray, icm_kegg_meta_bray)
mantel(icm_cog_meta_bray, icm_pfam_meta_bray)
mantel(icm_pfam_meta_bray, icm_kegg_meta_bray)
plot(icm_cog_scg_bray, icm_kegg_scg_bray, main = "COG SCG vs KEGG SCG")
abline(0,1)
mantel(icm_cog_scg_bray, icm_kegg_scg_bray)
plot(icm_cog_scg_bray, icm_pfam_scg_bray, main = "COG SCG vs PFAM SCG")
abline(0,1)
mantel(icm_cog_scg_bray, icm_pfam_scg_bray)
plot(icm_pfam_scg_bray, icm_kegg_scg_bray, main = "PFAM SCG vs KEGG SCG")
abline(0,1)
mantel(icm_pfam_scg_bray, icm_kegg_scg_bray)
#Plots
plot(icm_cog_scg_bray, icm_kegg_scg_bray, main = "COG-SCG vs KEGG-SCG")
abline(0,1)
plot(icm_cog_scg_bray, icm_pfam_scg_bray, main = "COG-SCG vs PFAM-SCG")
abline(0,1)
plot(icm_pfam_scg_bray, icm_kegg_scg_bray, main = "PFAM-SCG vs KEGG-SCG")
abline(0,1)
#Mantel test for correlation
mantel(icm_cog_scg_bray, icm_pfam_scg_bray)
mantel(icm_cog_scg_bray, icm_kegg_scg_bray)
mantel(icm_pfam_scg_bray, icm_kegg_scg_bray)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = setwd("/Users/Usuario/Desktop/Bioinformatica/Practicas/Practicas/Analysis/"))
library("vegan")
library("ggplot2")
library("tidyr")
library("dplyr")
icm_cog_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_cog_meta
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = setwd("/Users/Usuario/Desktop/Bioinformatica/Practicas/Practicas/Analysis/"))
library("vegan")
library("ggplot2")
library("tidyr")
library("dplyr")
ebi_go_abundances <- read.table("functional.tables/ERP112966_GO_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go_abundances$description <- NULL #Need to remove this column to work
ebi_go_abundances$category <- NULL #Need to remove this column to work
ebi_go_abundances <- t(ebi_go_abundances)
ebi_go_abundances
ebi_go_abundances_bray <- vegdist(ebi_go_abundances, method="bray")
ebi_go_abundances_bray
ebi_go_abundances_bray <- vegdist(ebi_go_abundances, method="bray")
ebi_go.slim_abundances_bray <- vegdist(ebi_go.slim_abundances, method="bray")
ebi_go_abundances <- read.table("functional.tables/ERP112966_GO_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go_abundances$description <- NULL #Need to remove this column to work
ebi_go_abundances$category <- NULL #Need to remove this column to work
ebi_go_abundances <- t(ebi_go_abundances)
ebi_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go.slim_abundances$description <- NULL
ebi_go.slim_abundances$category <- NULL
ebi_go.slim_abundances <- t(ebi_go.slim_abundances)
ebi_ipr_abundances <- read.table("functional.tables/ERP112966_IPR_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_ipr_abundances$description <- NULL
ebi_ipr_abundances$category <- NULL
ebi_ipr_abundances <- t(ebi_ipr_abundances)
ebi_go_abundances_bray <- vegdist(ebi_go_abundances, method="bray")
ebi_go.slim_abundances_bray <- vegdist(ebi_go.slim_abundances, method="bray")
ebi_ipr_abundances_bray <- vegdist(ebi_ipr_abundances, method="bray")
#Plots
plot(ebi_go_abundances_bray, ebi_go.slim_abundances_bray, main = "GO vs GO-SLIM")
abline(0,1)
plot(ebi_go_abundances_bray, ebi_ipr_abundances_bray, main = "GO vs IPR")
abline(0,1)
plot(ebi_go.slim_abundances_bray, ebi_ipr_abundances_bray, main = "GO-SLIM vs IPR")
abline(0,1)
#Mantel test for correlation
mantel(ebi_go_abundances_bray, ebi_go.slim_abundances_bray)
mantel(ebi_go_abundances_bray, ebi_ipr_abundances_bray)
mantel(ebi_go.slim_abundances_bray, ebi_ipr_abundances_bray)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = setwd("/Users/Usuario/Desktop/Bioinformatica/Practicas/Practicas/Analysis/"))
# EBI
ebi_go_abundances <- read.table("functional.tables/ERP112966_GO_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go_abundances$description <- NULL #Need to remove this column to work
ebi_go_abundances$category <- NULL #Need to remove this column to work
ebi_go_abundances <- t(ebi_go_abundances)
ebi_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go.slim_abundances$description <- NULL
ebi_go.slim_abundances$category <- NULL
ebi_go.slim_abundances <- t(ebi_go.slim_abundances)
ebi_ipr_abundances <- read.table("functional.tables/ERP112966_IPR_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_ipr_abundances$description <- NULL
ebi_ipr_abundances$category <- NULL
ebi_ipr_abundances <- t(ebi_ipr_abundances)
#ICM
icm_cog_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_cog_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_kegg_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_kegg_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_pfam_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_pfam.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_pfam_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_pfam.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
library("vegan")
library("ggplot2")
library("tidyr")
library("dplyr")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = setwd("/Users/Usuario/Desktop/Bioinformatica/Practicas/Practicas/Analysis/"))
# EBI
ebi_go_abundances_bray <- vegdist(ebi_go_abundances, method="bray")
ebi_go.slim_abundances_bray <- vegdist(ebi_go.slim_abundances, method="bray")
ebi_ipr_abundances_bray <- vegdist(ebi_ipr_abundances, method="bray")
#ICM
icm_cog_meta_bray <- vegdist(icm_cog_meta, method="bray")
icm_cog_scg_bray <- vegdist(icm_cog_scg, method="bray")
icm_kegg_meta_bray <-vegdist(icm_kegg_meta, method="bray")
icm_kegg_scg_bray <-vegdist(icm_kegg_scg, method="bray")
icm_pfam_meta_bray <-vegdist(icm_pfam_meta, method="bray")
icm_pfam_scg_bray <-vegdist(icm_pfam_scg, method="bray")
# Plots
plot(ebi_go_abundances_bray, icm_cog_meta_bray, main = "GO vs GO-SLIM")
abline(0,1)
plot(ebi_go_abundances_bray, icm_cog_scg_bray, main = "GO vs IPR")
abline(0,1)
plot(ebi_go_abundances_bray, icm_kegg_meta_bray, main = "GO-SLIM vs IPR")
abline(0,1)
plot(ebi_go_abundances_bray, icm_kegg_scg_bray, main = "GO vs GO-SLIM")
abline(0,1)
plot(ebi_go_abundances_bray, icm_pfam_meta_bray, main = "GO vs IPR")
abline(0,1)
plot(ebi_go_abundances_bray, icm_pfam_scg_bray, main = "GO-SLIM vs IPR")
abline(0,1)
#Mantel test for correlation
mantel(ebi_go_abundances_bray, icm_cog_meta_bray)
mantel(ebi_go_abundances_bray, icm_cog_scg_bray)
mantel(ebi_go_abundances_bray, icm_kegg_meta_bray)
mantel(ebi_go_abundances_bray, icm_kegg_scg_bray)
mantel(ebi_go_abundances_bray, icm_pfam_meta_bray)
mantel(ebi_go_abundances_bray, icm_pfam_scg_bray)
ebi_go_abundances_bray
icm_cog_meta_bray
ebi_go.slim_abundances_bray
ebi_go_abundances_bray
ebi_go.slim_abundances_bray
ebi_go.slim_abundances_bray
icm_cog_meta_bray
icm_cog_meta_bray
ebi_ipr_abundances_bray
# EBI
ebi_go_abundances <- read.table("functional.tables/ERP112966_GO_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go_abundances
icm_cog_meta_bray

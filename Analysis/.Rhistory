icm_pfam_meta_bray <-vegdist(icm_pfam_meta, method="bray")
icm_pfam_scg_bray <-vegdist(icm_pfam_scg, method="bray")
# Plots
plot(ebi_go_abundances_bray, icm_cog_meta_bray, main = "GO vs GO-SLIM")
abline(0,1)
plot(ebi_go_abundances_bray, icm_cog_scg_bray, main = "GO vs IPR")
abline(0,1)
plot(ebi_go_abundances_bray, icm_kegg_meta_bray, main = "GO-SLIM vs IPR")
abline(0,1)
plot(ebi_go_abundances_bray, icm_kegg_scg_bray, main = "GO vs GO-SLIM")
abline(0,1)
plot(ebi_go_abundances_bray, icm_pfam_meta_bray, main = "GO vs IPR")
abline(0,1)
plot(ebi_go_abundances_bray, icm_pfam_scg_bray, main = "GO-SLIM vs IPR")
abline(0,1)
#Mantel test for correlation
mantel(ebi_go_abundances_bray, icm_cog_meta_bray)
mantel(ebi_go_abundances_bray, icm_cog_scg_bray)
mantel(ebi_go_abundances_bray, icm_kegg_meta_bray)
mantel(ebi_go_abundances_bray, icm_kegg_scg_bray)
mantel(ebi_go_abundances_bray, icm_pfam_meta_bray)
mantel(ebi_go_abundances_bray, icm_pfam_scg_bray)
ebi_go_abundances_bray
icm_cog_meta_bray
ebi_go.slim_abundances_bray
ebi_go_abundances <- read.table("functional.tables/ERP112966_GO_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go_abundances$description <- NULL #Need to remove this column to work
ebi_go_abundances$category <- NULL #Need to remove this column to work
colnames(ebi_go_abundances) <- lista
ebi_go_abundances
#ICM
icm_cog_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_cog_meta
#ICM
icm_cog_meta <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_cog_meta
# EBI
ebi_to_icm <- read.table("functional.tables/ebi_to_icm.txt")
lista <- ebi_to_icm$V3
ebi_go_abundances <- read.table("functional.tables/ERP112966_GO_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go_abundances$description <- NULL #Need to remove this column to work
ebi_go_abundances$category <- NULL #Need to remove this column to work
colnames(ebi_go_abundances) <- lista
ebi_go_abundances <- t(ebi_go_abundances)
ebi_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_go.slim_abundances$description <- NULL
ebi_go.slim_abundances$category <- NULL
colnames(ebi_go.slim_abundances) <- lista
ebi_go.slim_abundances <- t(ebi_go.slim_abundances)
ebi_ipr_abundances <- read.table("functional.tables/ERP112966_IPR_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_ipr_abundances$description <- NULL
ebi_ipr_abundances$category <- NULL
colnames(ebi_ipr_abundances) <- lista
ebi_ipr_abundances <- t(ebi_ipr_abundances)
#ICM
icm_cog_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_cog_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_kegg_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_kegg_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_pfam_meta <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_pfam.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_pfam_scg <- t(read.table("functional.tables/EMOSE-GC_ICM_250bp_pfam.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ebi_go_abundances_bray
icm_cog_meta_bray
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = setwd("/Users/Usuario/Desktop/Bioinformatica/Practicas/Practicas/Analysis/"))
library("vegan")
library("ggplot2")
library("tidyr")
library("dplyr")
library("reshape2")
library("randomcoloR")
f_go_abundances <- read.table("functional.tables/ERP112966_GO_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_kegg_meta <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
f_kegg_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ekey <- read.table("functional.tables/ekey.txt")
slim <- read.table("functional.tables/GO.slim.txt")
#KO and path conexion
ko_to_path <- read.table(text = gsub(":", "\t", readLines("functional.tables/ko_pathway.list")))
ko_to_path <- ko_to_path %>%
select(2, 4)
colnames(ko_to_path)[1] <- "KO"
colnames(ko_to_path)[2] <- "Path"
#Path id to path name
path_name <- read.delim("functional.tables/pathway_name.list", header = FALSE)
path_name <- path_name %>%
separate(V1, c(NA, "Path"), ":")
colnames(path_name)[2] <- "PName"
#Merge to obtain KO id and path name together
all_data_kegg <- merge(ko_to_path, path_name)
#Path name with path class
hierarchy <- read.delim("functional.tables/kegg_hierarchy.txt", header = TRUE)
hierarchy <- hierarchy %>%
select(3,4)
#Merge
all_data_kegg <- merge(all_data_kegg, hierarchy)
#Computing the row sums for every KO in the samples table
f_kegg_meta2 <- f_kegg_meta
f_kegg_meta2$sum <- rowSums(f_kegg_meta)
f_kegg_meta2 <- f_kegg_meta2 %>%
select(0, 51)
f_kegg_meta2 <- tibble::rownames_to_column(f_kegg_meta2, "KO")
#
f_kegg_meta <- tibble::rownames_to_column(f_kegg_meta, "KO")
#Merge all
all_data_kegg1 <- merge(all_data_kegg, f_kegg_meta2, by = "KO")
all_data_kegg2 <- merge(all_data_kegg, f_kegg_meta, by = "KO")
#Transform to wide
all_data_kegg1 <- spread(all_data_kegg1, key = PClass, value = sum)
# Overall Selecting columns
class_sums <- all_data_kegg1 %>%
select(-1,-2,-3)
kegg_prop <- data.frame(t(colSums(class_sums, na.rm = TRUE)))
# By sample
kegg_by_sample <- all_data_kegg2 %>%
select(-1,-2,-3)
kegg_by_sample <- kegg_by_sample %>%
group_by(PClass) %>%
summarise(across(starts_with("ERR"),sum))
lista <- "PClass"
lista <- c(lista, ekey$V3)
colnames(kegg_by_sample) <- lista
#KO and path conexion
ko_to_path <- read.table(text = gsub(":", "\t", readLines("functional.tables/ko_pathway.list")))
ko_to_path <- ko_to_path %>%
select(2, 4)
colnames(ko_to_path)[1] <- "KO"
colnames(ko_to_path)[2] <- "Path"
#Path id to path name
path_name <- read.delim("functional.tables/pathway_name.list", header = FALSE)
path_name <- path_name %>%
separate(V1, c(NA, "Path"), ":")
colnames(path_name)[2] <- "PName"
#Merge to obtain KO id and path name together
all_data_kegg <- merge(ko_to_path, path_name)
#Path name with path class
hierarchy <- read.delim("functional.tables/kegg_hierarchy.txt", header = TRUE)
hierarchy <- hierarchy %>%
select(3,4)
#Merge
all_data_kegg <- merge(all_data_kegg, hierarchy)
#Computing the row sums for every KO in the samples table
f_kegg_meta2 <- f_kegg_meta
f_kegg_meta2$sum <- rowSums(f_kegg_meta)
f_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_kegg_meta <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
f_kegg_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ekey <- read.table("functional.tables/ekey.txt")
slim <- read.table("functional.tables/GO.slim.txt")
#KO and path conexion
ko_to_path <- read.table(text = gsub(":", "\t", readLines("functional.tables/ko_pathway.list")))
ko_to_path <- ko_to_path %>%
select(2, 4)
colnames(ko_to_path)[1] <- "KO"
colnames(ko_to_path)[2] <- "Path"
#Path id to path name
path_name <- read.delim("functional.tables/pathway_name.list", header = FALSE)
path_name <- path_name %>%
separate(V1, c(NA, "Path"), ":")
colnames(path_name)[2] <- "PName"
#Merge to obtain KO id and path name together
all_data_kegg <- merge(ko_to_path, path_name)
#Path name with path class
hierarchy <- read.delim("functional.tables/kegg_hierarchy.txt", header = TRUE)
hierarchy <- hierarchy %>%
select(3,4)
#Merge
all_data_kegg <- merge(all_data_kegg, hierarchy)
#Computing the row sums for every KO in the samples table
f_kegg_meta2 <- f_kegg_meta
f_kegg_meta2$sum <- rowSums(f_kegg_meta)
f_kegg_meta2 <- f_kegg_meta2 %>%
select(0, 51)
f_kegg_meta2 <- tibble::rownames_to_column(f_kegg_meta2, "KO")
#
f_kegg_meta <- tibble::rownames_to_column(f_kegg_meta, "KO")
#Merge all
all_data_kegg1 <- merge(all_data_kegg, f_kegg_meta2, by = "KO")
all_data_kegg2 <- merge(all_data_kegg, f_kegg_meta, by = "KO")
#Transform to wide
all_data_kegg1 <- spread(all_data_kegg1, key = PClass, value = sum)
# Overall Selecting columns
class_sums <- all_data_kegg1 %>%
select(-1,-2,-3)
kegg_prop <- data.frame(t(colSums(class_sums, na.rm = TRUE)))
# By sample
kegg_by_sample <- all_data_kegg2 %>%
select(-1,-2,-3)
kegg_by_sample <- kegg_by_sample %>%
group_by(PClass) %>%
summarise(across(starts_with("ERR"),sum))
lista <- "PClass"
lista <- c(lista, ekey$V3)
colnames(kegg_by_sample) <- lista
f_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_kegg_meta <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
f_kegg_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ekey <- read.table("functional.tables/ekey.txt")
slim <- read.table("functional.tables/GO.slim.txt")
#KO and path conexion
ko_to_path <- read.table(text = gsub(":", "\t", readLines("functional.tables/ko_pathway.list")))
ko_to_path <- ko_to_path %>%
select(2, 4)
colnames(ko_to_path)[1] <- "KO"
colnames(ko_to_path)[2] <- "Path"
#Path id to path name
path_name <- read.delim("functional.tables/pathway_name.list", header = FALSE)
path_name <- path_name %>%
separate(V1, c(NA, "Path"), ":")
colnames(path_name)[2] <- "PName"
#Merge to obtain KO id and path name together
all_data_kegg <- merge(ko_to_path, path_name)
#Path name with path class
hierarchy <- read.delim("functional.tables/kegg_hierarchy.txt", header = TRUE)
hierarchy <- hierarchy %>%
select(3,4)
#Merge
all_data_kegg <- merge(all_data_kegg, hierarchy)
#Computing the row sums for every KO in the samples table
f_kegg_meta2 <- f_kegg_scg
f_kegg_meta2$sum <- rowSums(f_kegg_meta)
f_kegg_meta2 <- f_kegg_meta2 %>%
select(0, 51)
f_kegg_meta2 <- tibble::rownames_to_column(f_kegg_meta2, "KO")
#
f_kegg_meta <- tibble::rownames_to_column(f_kegg_meta, "KO")
#Merge all
all_data_kegg1 <- merge(all_data_kegg, f_kegg_meta2, by = "KO")
all_data_kegg2 <- merge(all_data_kegg, f_kegg_meta, by = "KO")
#Transform to wide
all_data_kegg1 <- spread(all_data_kegg1, key = PClass, value = sum)
# Overall Selecting columns
class_sums <- all_data_kegg1 %>%
select(-1,-2,-3)
kegg_prop <- data.frame(t(colSums(class_sums, na.rm = TRUE)))
# By sample
kegg_by_sample <- all_data_kegg2 %>%
select(-1,-2,-3)
kegg_by_sample <- kegg_by_sample %>%
group_by(PClass) %>%
summarise(across(starts_with("ERR"),sum))
lista <- "PClass"
lista <- c(lista, ekey$V3)
colnames(kegg_by_sample) <- lista
kegg_by_sample <- melt(kegg_by_sample, id.vars = "PClass")
# Plots
pale <- distinctColorPalette(30)
ggplot(kegg_by_sample, aes(x=variable, y = value, fill = PClass)) + geom_bar(position = "fill", stat = "identity") + theme(text = element_text(size = 7), axis.text.x = element_text(size = 5, angle = 90, vjust = 0.5, hjust=1), legend.key.size = unit(0.3, "cm")) + labs(x = NULL, y = NULL, fill = "KEGG class") + guides(fill=guide_legend(ncol=1)) + scale_fill_manual(values = pale)
f_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_kegg_meta <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.metaGsizeNorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
f_kegg_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ekey <- read.table("functional.tables/ekey.txt")
slim <- read.table("functional.tables/GO.slim.txt")
#KO and path conexion
ko_to_path <- read.table(text = gsub(":", "\t", readLines("functional.tables/ko_pathway.list")))
ko_to_path <- ko_to_path %>%
select(2, 4)
colnames(ko_to_path)[1] <- "KO"
colnames(ko_to_path)[2] <- "Path"
#Path id to path name
path_name <- read.delim("functional.tables/pathway_name.list", header = FALSE)
path_name <- path_name %>%
separate(V1, c(NA, "Path"), ":")
colnames(path_name)[2] <- "PName"
#Merge to obtain KO id and path name together
all_data_kegg <- merge(ko_to_path, path_name)
#Path name with path class
hierarchy <- read.delim("functional.tables/kegg_hierarchy.txt", header = TRUE)
hierarchy <- hierarchy %>%
select(3,4)
#Merge
all_data_kegg <- merge(all_data_kegg, hierarchy)
#Computing the row sums for every KO in the samples table
f_kegg_meta2 <- f_kegg_meta
f_kegg_meta2$sum <- rowSums(f_kegg_meta)
f_kegg_meta2 <- f_kegg_meta2 %>%
select(0, 51)
f_kegg_meta2 <- tibble::rownames_to_column(f_kegg_meta2, "KO")
#
f_kegg_meta <- tibble::rownames_to_column(f_kegg_meta, "KO")
#Merge all
all_data_kegg1 <- merge(all_data_kegg, f_kegg_meta2, by = "KO")
all_data_kegg2 <- merge(all_data_kegg, f_kegg_meta, by = "KO")
#Transform to wide
all_data_kegg1 <- spread(all_data_kegg1, key = PClass, value = sum)
# Overall Selecting columns
class_sums <- all_data_kegg1 %>%
select(-1,-2,-3)
kegg_prop <- data.frame(t(colSums(class_sums, na.rm = TRUE)))
# By sample
kegg_by_sample <- all_data_kegg2 %>%
select(-1,-2,-3)
kegg_by_sample <- kegg_by_sample %>%
group_by(PClass) %>%
summarise(across(starts_with("ERR"),sum))
lista <- "PClass"
lista <- c(lista, ekey$V3)
colnames(kegg_by_sample) <- lista
kegg_by_sample <- melt(kegg_by_sample, id.vars = "PClass")
# Plots
pale <- distinctColorPalette(30)
ggplot(kegg_by_sample, aes(x=variable, y = value, fill = PClass)) + geom_bar(position = "fill", stat = "identity") + theme(text = element_text(size = 7), axis.text.x = element_text(size = 5, angle = 90, vjust = 0.5, hjust=1), legend.key.size = unit(0.3, "cm")) + labs(x = NULL, y = NULL, fill = "KEGG class") + guides(fill=guide_legend(ncol=1)) + scale_fill_manual(values = pale)
f_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_kegg_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ekey <- read.table("functional.tables/ekey.txt")
slim <- read.table("functional.tables/GO.slim.txt")
#KO and path conexion
ko_to_path <- read.table(text = gsub(":", "\t", readLines("functional.tables/ko_pathway.list")))
ko_to_path <- ko_to_path %>%
select(2, 4)
colnames(ko_to_path)[1] <- "KO"
colnames(ko_to_path)[2] <- "Path"
#Path id to path name
path_name <- read.delim("functional.tables/pathway_name.list", header = FALSE)
path_name <- path_name %>%
separate(V1, c(NA, "Path"), ":")
colnames(path_name)[2] <- "PName"
#Merge to obtain KO id and path name together
all_data_kegg <- merge(ko_to_path, path_name)
#Path name with path class
hierarchy <- read.delim("functional.tables/kegg_hierarchy.txt", header = TRUE)
hierarchy <- hierarchy %>%
select(3,4)
#Merge
all_data_kegg <- merge(all_data_kegg, hierarchy)
#Computing the row sums for every KO in the samples table
f_kegg_scg2 <- f_kegg_scg
f_kegg_scg2$sum <- rowSums(f_kegg_scg)
f_kegg_scg2 <- f_kegg_scg2 %>%
select(0, 51)
f_kegg_scg2 <- tibble::rownames_to_column(f_kegg_scg2, "KO")
#
f_kegg_scg <- tibble::rownames_to_column(f_kegg_scg, "KO")
#Merge all
all_data_kegg1 <- merge(all_data_kegg, f_kegg_scg2, by = "KO")
all_data_kegg2 <- merge(all_data_kegg, f_kegg_scg, by = "KO")
#Transform to wide
all_data_kegg1 <- spread(all_data_kegg1, key = PClass, value = sum)
# Overall Selecting columns
class_sums <- all_data_kegg1 %>%
select(-1,-2,-3)
kegg_prop <- data.frame(t(colSums(class_sums, na.rm = TRUE)))
# By sample
kegg_by_sample <- all_data_kegg2 %>%
select(-1,-2,-3)
kegg_by_sample <- kegg_by_sample %>%
group_by(PClass) %>%
summarise(across(starts_with("ERR"),sum))
lista <- "PClass"
lista <- c(lista, ekey$V3)
colnames(kegg_by_sample) <- lista
f_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_kegg_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ekey <- read.table("functional.tables/ekey.txt")
slim <- read.table("functional.tables/GO.slim.txt")
#KO and path conexion
ko_to_path <- read.table(text = gsub(":", "\t", readLines("functional.tables/ko_pathway.list")))
ko_to_path <- ko_to_path %>%
select(2, 4)
colnames(ko_to_path)[1] <- "KO"
colnames(ko_to_path)[2] <- "Path"
#Path id to path name
path_name <- read.delim("functional.tables/pathway_name.list", header = FALSE)
path_name <- path_name %>%
separate(V1, c(NA, "Path"), ":")
colnames(path_name)[2] <- "PName"
#Merge to obtain KO id and path name together
all_data_kegg <- merge(ko_to_path, path_name)
#Path name with path class
hierarchy <- read.delim("functional.tables/kegg_hierarchy.txt", header = TRUE)
hierarchy <- hierarchy %>%
select(3,4)
#Merge
all_data_kegg <- merge(all_data_kegg, hierarchy)
#Computing the row sums for every KO in the samples table
f_kegg_scg2 <- f_kegg_scg
f_kegg_scg2$sum <- rowSums(f_kegg_scg)
f_kegg_scg2 <- f_kegg_scg2 %>%
select(0, 51)
f_kegg_scg2 <- tibble::rownames_to_column(f_kegg_scg2, "KO")
#Merge all
all_data_kegg1 <- merge(all_data_kegg, f_kegg_scg2, by = "KO")
# Overall Selecting columns
class_sums <- all_data_kegg1 %>%
select(-1,-2,-3)
kegg_prop <- data.frame(t(colSums(class_sums, na.rm = TRUE)))
f_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_kegg_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ekey <- read.table("functional.tables/ekey.txt")
slim <- read.table("functional.tables/GO.slim.txt")
#KO and path conexion
ko_to_path <- read.table(text = gsub(":", "\t", readLines("functional.tables/ko_pathway.list")))
ko_to_path <- ko_to_path %>%
select(2, 4)
colnames(ko_to_path)[1] <- "KO"
colnames(ko_to_path)[2] <- "Path"
#Path id to path name
path_name <- read.delim("functional.tables/pathway_name.list", header = FALSE)
path_name <- path_name %>%
separate(V1, c(NA, "Path"), ":")
colnames(path_name)[2] <- "PName"
#Merge to obtain KO id and path name together
all_data_kegg <- merge(ko_to_path, path_name)
#Path name with path class
hierarchy <- read.delim("functional.tables/kegg_hierarchy.txt", header = TRUE)
hierarchy <- hierarchy %>%
select(3,4)
#Merge
all_data_kegg <- merge(all_data_kegg, hierarchy)
#Computing the row sums for every KO in the samples table
f_kegg_scg2 <- f_kegg_scg
f_kegg_scg2$sum <- rowSums(f_kegg_scg)
f_kegg_scg2 <- f_kegg_scg2 %>%
select(0, 51)
f_kegg_scg2 <- tibble::rownames_to_column(f_kegg_scg2, "KO")
#Merge all
all_data_kegg1 <- merge(all_data_kegg, f_kegg_scg2, by = "KO")
# Overall Selecting columns
class_sums <- all_data_kegg1 %>%
select(-1,-2,-3)
kegg_prop <- data.frame(t(colSums(class_sums, na.rm = TRUE)))
f_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_kegg_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ekey <- read.table("functional.tables/ekey.txt")
slim <- read.table("functional.tables/GO.slim.txt")
#KO and path conexion
ko_to_path <- read.table(text = gsub(":", "\t", readLines("functional.tables/ko_pathway.list")))
ko_to_path <- ko_to_path %>%
select(2, 4)
colnames(ko_to_path)[1] <- "KO"
colnames(ko_to_path)[2] <- "Path"
#Path id to path name
path_name <- read.delim("functional.tables/pathway_name.list", header = FALSE)
path_name <- path_name %>%
separate(V1, c(NA, "Path"), ":")
colnames(path_name)[2] <- "PName"
#Merge to obtain KO id and path name together
all_data_kegg <- merge(ko_to_path, path_name)
#Path name with path class
hierarchy <- read.delim("functional.tables/kegg_hierarchy.txt", header = TRUE)
hierarchy <- hierarchy %>%
select(3,4)
#Merge
all_data_kegg <- merge(all_data_kegg, hierarchy)
#Computing the row sums for every KO in the samples table
f_kegg_scg2 <- f_kegg_scg
f_kegg_scg2$sum <- rowSums(f_kegg_scg)
f_kegg_scg2 <- f_kegg_scg2 %>%
select(0, 51)
f_kegg_scg2 <- tibble::rownames_to_column(f_kegg_scg2, "KO")
#Merge all
all_data_kegg1 <- merge(all_data_kegg, f_kegg_scg2, by = "KO")
# By sample
kegg_by_sample <- all_data_kegg2 %>%
select(-1,-2,-3)
kegg_by_sample <- kegg_by_sample %>%
group_by(PClass) %>%
summarise(across(starts_with("ERR"),sum))
lista <- "PClass"
lista <- c(lista, ekey$V3)
colnames(kegg_by_sample) <- lista
kegg_by_sample <- melt(kegg_by_sample, id.vars = "PClass")
# Plots
pale <- distinctColorPalette(30)
ggplot(kegg_by_sample, aes(x=variable, y = value, fill = PClass)) + geom_bar(position = "fill", stat = "identity") + theme(text = element_text(size = 7), axis.text.x = element_text(size = 5, angle = 90, vjust = 0.5, hjust=1), legend.key.size = unit(0.3, "cm")) + labs(x = NULL, y = NULL, fill = "KEGG class") + guides(fill=guide_legend(ncol=1)) + scale_fill_manual(values = pale)
f_go.slim_abundances <- tibble::rownames_to_column(f_go.slim_abundances, "GO")
f_go.slim_abundances[1] <- NULL
f_go.slim_abundances[2] <- NULL
l <- "description"
l<- c(l,slim$V3)
colnames(f_go.slim_abundances) <- l
f_go.slim_abundances <- melt(f_go.slim_abundances, id.vars = "description")
pale <- distinctColorPalette(116)
GO_Slim_plot <- ggplot(f_go.slim_abundances, aes(x=variable, y = value, fill = description)) + geom_bar(position = "fill", stat = "identity") + theme(text = element_text(size = 7), axis.text.x = element_text(size = 5, angle = 90, vjust = 0.5, hjust=1), legend.position = "none")  + scale_fill_manual(values = pale) + labs(x = NULL, y = NULL)
GO_Slim_legend <- ggplot(f_go.slim_abundances, aes(x=variable, y = value, fill = description)) + geom_bar(position = "fill", stat = "identity") + theme(text = element_text(size = 7), axis.text.x = element_text(size = 5, angle = 90, vjust = 0.5, hjust=1), legend.key.size = unit(0.3, "cm"), plot.margin = unit(c(1,1,1,1.6), "cm")) + labs(x = NULL, y = NULL, fill = "GO-Slim metagneomics") + guides(fill=guide_legend(ncol=4)) + scale_fill_manual(values = pale)
GO_Slim_plot
GO_Slim_legend
ebi_ipr_abundances <- read.table("functional.tables/ERP112966_IPR_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_ipr_abundances
f_go.slim_abundances
f_go.slim_abundances <- read.table("functional.tables/ERP112966_GO-slim_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
f_kegg_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_KEGG.ko.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
ebi_ipr_abundances <- read.table("functional.tables/ERP112966_IPR_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_ipr_abundances$description <- NULL
ebi_ipr_abundances$category <- NULL
colnames(ebi_ipr_abundances) <- lista
f_go.slim_abundances
ebi_ipr_abundances <- read.table("functional.tables/ERP112966_IPR_abundances_v4.1.tsv", header = TRUE, row.names = 1, sep ="\t")
ebi_ipr_abundances
f_go.slim_abundances
ebi_ipr_abundances
icm_cog_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_COG.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_cog_scg
f_go.slim_abundances
f_kegg_scg
icm_cog_scg
icm_pfam_scg
icm_pfam_scg <- (read.table("functional.tables/EMOSE-GC_ICM_250bp_pfam.lengthNorm.SCGnorm.counts.tbl", header = TRUE, sep = "\t", row.names = 1))
icm_pfam_scg
f_kegg_scg
icm_cog_scg
f_go.slim_abundances <- tibble::rownames_to_column(f_go.slim_abundances, "GO")
f_go.slim_abundances[1] <- NULL
f_go.slim_abundances[2] <- NULL
l <- "description"
l<- c(l,slim$V3)
colnames(f_go.slim_abundances) <- l
f_go.slim_abundances <- melt(f_go.slim_abundances, id.vars = "description")
kegg_by_sample <- melt(kegg_by_sample, id.vars = "PClass")
# Plots
pale <- distinctColorPalette(30)
ggplot(kegg_by_sample, aes(x=variable, y = value, fill = PClass)) + geom_bar(position = "fill", stat = "identity") + theme(text = element_text(size = 7), axis.text.x = element_text(size = 5, angle = 90, vjust = 0.5, hjust=1), legend.key.size = unit(0.3, "cm")) + labs(x = NULL, y = NULL, fill = "KEGG class") + guides(fill=guide_legend(ncol=1)) + scale_fill_manual(values = pale)
